version: "3.8"

services:
  frontend:
    image: ${DOCKER_REPO}/frontend:latest
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.frontend.rule=Host(`ssiem.dev`)"
      - "traefik.http.routers.frontend.entrypoints=websecure"
      - "traefik.http.routers.frontend.tls.certresolver=myresolver"
      - "traefik.http.services.frontend.loadbalancer.server.port=80"
    environment:
      - REACT_APP_API_URL=${REACT_APP_API_URL:-https://api.ssiem.dev}
      - DOMAIN=${DOMAIN}

  backend:
    image: ${DOCKER_REPO}/backend:latest
    environment:
      - DJANGO_SECRET_KEY=${DJANGO_SECRET_KEY}
      - DJANGO_DEBUG=False
      - DB_NAME=${DB_NAME}
      - DB_USER=${DB_USER}
      - DB_PASSWORD=${DB_PASSWORD}
      - DB_HOST=db
      - DB_PORT=3306
    depends_on:
      - db
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.backend.rule=Host(`api.ssiem.dev`)"
      - "traefik.http.routers.backend.entrypoints=websecure"
      - "traefik.http.routers.backend.tls.certresolver=myresolver"
      - "traefik.http.services.backend.loadbalancer.server.port=8000"

  db:
    image: mariadb:10.5
    volumes:
      - mariadb_data:/var/lib/mysql
    environment:
      - MYSQL_DATABASE=${DB_NAME}
      - MYSQL_USER=${DB_USER}
      - MYSQL_PASSWORD=${DB_PASSWORD}
      - MYSQL_ROOT_PASSWORD=${DB_ROOT_PASSWORD}
    deploy:
      resources:
        limits:
          cpus: "2"
          memory: 4G

  redis:
    image: redis:alpine
    deploy:
      replicas: 2
      resources:
        limits:
          memory: "1G"
      restart_policy:
        condition: on-failure

  celery:
    image: ${DOCKER_REPO}/celery:latest
    command: celery -A siem worker -l info
    volumes:
      - log_files:/app/log_files
      - processed_log_files:/app/processed_log_files
    depends_on:
      - backend
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0
    deploy:
      replicas: 2
      resources:
        limits:
          memory: "1G"
      restart_policy:
        condition: on-failure

  celery-beat:
    image: ${DOCKER_REPO}/celery:latest
    command: celery -A siem beat -l info
    volumes:
      - log_files:/app/log_files
      - processed_log_files:/app/processed_log_files
    depends_on:
      - backend
      - redis
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - CELERY_RESULT_BACKEND=redis://redis:6379/0

  flower:
    image: mher/flower
    environment:
      - CELERY_BROKER_URL=redis://redis:6379/0
      - FLOWER_PORT=5555
      - TZ=Australia/Melbourne
    labels:
      - "traefik.enable=true"
      - "traefik.http.routers.flower.rule=Host(`flower.ssiem.dev`)"
      - "traefik.http.routers.flower.entrypoints=websecure"
      - "traefik.http.routers.flower.tls.certresolver=myresolver"
      - "traefik.http.services.flower.loadbalancer.server.port=5555"
    depends_on:
      - redis
      - celery

  traefik:
    image: "traefik:v2.9"
    command:
      - "--log.level=DEBUG"
      - "--api.insecure=true"
      - "--providers.docker=true"
      - "--providers.docker.exposedbydefault=false"
      - "--entryPoints.web.address=:80"
      - "--entryPoints.websecure.address=:443"
      - "--certificatesresolvers.myresolver.acme.dnschallenge=true"
      - "--certificatesresolvers.myresolver.acme.dnschallenge.provider=cloudflare"
      - "--certificatesresolvers.myresolver.acme.email=${CLOUDFLARE_EMAIL}"
      - "--certificatesresolvers.myresolver.acme.storage=/letsencrypt/acme.json"
    ports:
      - "80:80"
      - "443:443"
    environment:
      - "CF_API_EMAIL=${CLOUDFLARE_EMAIL}"
      - "CF_DNS_API_TOKEN=${CF_DNS_API_TOKEN}"
    volumes:
      - "./data/traefik:/letsencrypt"
      - "/var/run/docker.sock:/var/run/docker.sock:ro"

volumes:
  mariadb_data:
  log_files:
  processed_log_files:
  data:
